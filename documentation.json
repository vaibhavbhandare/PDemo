{
    "pipes": [
        {
            "name": "CamelCaseComponent",
            "id": "pipe-CamelCaseComponent-71eed90a9539b1248dca8549b6f70818",
            "file": "src/app/fbm/fb.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        },
                        {
                            "name": "data",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "camelcase",
            "sourceCode": "import {Pipe , PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'camelcase'\r\n})\r\n\r\nexport class CamelCaseComponent implements PipeTransform {\r\n\r\n    transform(value: any , data: any) {\r\n      if (!value) { return value; }\r\n      return value.replace(/\\w\\S*/g,  (txt) => {\r\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      });\r\n    }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "ColumnDefination",
            "id": "interface-ColumnDefination-541fbe13a0d04a567e321403af98cd0f",
            "file": "src/app/services/startupm.service.ts",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport interface ColumnDefination {\r\n  headerName?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StartupmService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getHistoricalStartupMetricrowData(): Observable<any> {\r\n    return this.http.get('assets/data/getInvestigatorList.json');\r\n  }\r\n\r\n  getHistoricalStudiesRowData(): Observable<any> {\r\n    return this.http.get('assets/data/performHistAnalysisDetail.json');\r\n  }\r\n\r\n  getColumnDef(): [] {\r\n    const columndata: any = [];\r\n    columndata.push(\r\n      { headerName: 'StudyID', field: 'studyId' },\r\n      { headerName: 'Tags', field: 'tagKeys' },\r\n      { headerName: 'Startup Time (FPA to FSI in Days)', field: 'start_up_time' },\r\n      { headerName: 'FSI_TO_FSS', field: 'fsi_to_fss' },\r\n      { headerName: 'ACTIVE_SITES', field: 'active_sites' },\r\n      { headerName: 'SITES_ACTIVELY_SCREENING', field: 'sites_actively_screening' },\r\n      { headerName: 'SITE_INIT_PERIOD', field: 'site_init_period' },\r\n      { headerName: 'SI_25_PERCENT', field: 'si_25_percent' },\r\n      { headerName: 'SI_50_PERCENT', field: 'si_50_percent' },\r\n      { headerName: 'SI_90_PERCENT', field: 'si_90_percent' },\r\n      { headerName: 'AVG_SITE_INIT_RATE', field: 'avg_site_init_rate' },\r\n      { headerName: 'INITIATED_SITES', field: 'initiated_sites' }\r\n    );\r\n    return columndata;\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "headerName",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Geography",
            "id": "interface-Geography-9eaef861f4f43572566890a67861611c",
            "file": "src/app/model/geography.ts",
            "type": "interface",
            "sourceCode": "export interface Geography {\r\n    geographyKey: number; // 0,\r\n    geographyLevel: string; // WW,\r\n    geographyName: string; // Worldwide\r\n}\r\n",
            "properties": [
                {
                    "name": "geographyKey",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "geographyLevel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "geographyName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Person",
            "id": "interface-Person-09fa957a405bf42d08e2ff9504fb9cbc",
            "file": "src/app/signup/Person.ts",
            "type": "interface",
            "sourceCode": "export interface Person {\r\n     name: string;\r\n     phone: string;\r\n     address: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "address",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "phone",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-12d9db9ded1b6d79732bf6c4df21d965",
            "file": "src/app/users/users.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { EventEmitter } from '';\r\n\r\nexport interface State {\r\n  flag: string;\r\n  name: string;\r\n  population: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  public userList: any;\r\n  public patientData: any = [];\r\n  public newObj: any;\r\n\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(public usrser: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.usrser.getUserdata().subscribe((data => {\r\n      this.userList = data;\r\n    }));\r\n\r\n    this.usrser.getCovidPatient().subscribe(value => {\r\n      this.patientData = value;\r\n    },\r\n      (err) => {\r\n        // getting error when url are wrong\r\n        console.log('error');\r\n      });\r\n  }\r\n\r\n  getUserData(id) {\r\n    this.router.navigate(['/userdetails', id]);\r\n  }\r\n\r\n  getData(http: HttpClient) {\r\n\r\n  }\r\n\r\n  postdata() {\r\n   this.newObj = {\r\n      id: 100,\r\n      name: 'Austria',\r\n      report: '+ve',\r\n      bloodgroup: 'A',\r\n      age: '34'\r\n    };\r\n\r\n   this.usrser.postSelectedData(this.newObj).subscribe(data => {\r\n        // console.log(data);\r\n        this.usrser.getCovidPatient().subscribe(value => {\r\n          this.patientData = value;\r\n        });\r\n   });\r\n   // location.reload();\r\n\r\n  }\r\n\r\n  deleteData(id) {\r\n    this.usrser.deleteCovidData(id).subscribe(data => {\r\n      this.patientData = this.patientData.filter(item => item.id !== id);\r\n    });\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "flag",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "population",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BbService",
            "id": "injectable-BbService-5153c5848653a22aa0bc93c5f98b7ed6",
            "file": "src/app/services/bb.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BbService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "CovidDataService",
            "id": "injectable-CovidDataService-5fa7471190c825b360068eddd7ef1057",
            "file": "src/app/covid19-m/services/coviddata.service.ts",
            "properties": [
                {
                    "name": "headline",
                    "defaultValue": "'This is covid center'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "newUpdate",
                    "defaultValue": "''",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subject",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "CountryCount",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "CountryCounts",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getcovidData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable , Subject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CovidDataService {\r\n\r\n    public headline = 'This is covid center';\r\n    public newUpdate: any = '';\r\n    public subject = new Subject<any>();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // below method explain the observable next\r\n    getcovidData(): Observable<any> {\r\n        this.newUpdate = new Observable( (observer) => {\r\n            observer.next(this.headline);\r\n            // setTimeout(() => {\r\n            //     observer.next('String Get Reflected from Observable next method');\r\n            //     // observer.unsubscribe()\r\n            // }, 5000);\r\n        });\r\n        return this.newUpdate;\r\n    }\r\n\r\n    CountryCounts(value) {\r\n      this.newUpdate = value;\r\n    }\r\n\r\n    CountryCount() {\r\n      return this.newUpdate;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-5bdcfedaff620ad1ab09dec80c4d6c7f",
            "file": "src/app/login/data.service.ts",
            "properties": [
                {
                    "name": "productList",
                    "type": "Array<Product>",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "description": "",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {Product} from '../products/Product';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class DataService {\r\n    productList: Array<Product>;\r\n\r\n    constructor() {\r\n    this.productList = new Array<Product>();\r\n    const p1 = new Product(1, 'Angular CookBook', 'Technical', 240, 'assets/images/angular.jpg');\r\n    const p2 = new Product(2, 'Ajax for Dummies', 'Technical', 640, 'assets/images/ajax.jpg');\r\n    const p3 = new Product(3, 'Life Rules', 'Self help', 540, 'assets/images/liferules.jpg');\r\n    const p4 = new Product(4, 'Tinkle', 'Comic', 140, 'assets/images/tinkle.jpg');\r\n    const p5 = new Product(5, 'You can Win', 'Self help', 440, 'assets/images/youcanwin.jpg');\r\n    this.productList.push(p1);\r\n    this.productList.push(p2);\r\n    this.productList.push(p3);\r\n    this.productList.push(p4);\r\n    this.productList.push(p5);\r\n    }\r\n\r\n    getProduct() {\r\n        return this.productList;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "FbserviceService",
            "id": "injectable-FbserviceService-641bbd0e71787fd5bd65e168be7a5961",
            "file": "src/app/fbm/fbservice.service.ts",
            "properties": [
                {
                    "name": "subject",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "setdata",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject , Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FbserviceService {\r\n\r\n  public subject = new Subject<any>();\r\n\r\n  constructor() { }\r\n\r\n  setdata(data) {\r\n   this.subject.next(data);\r\n  }\r\n\r\n  getData(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "HeaderAuthService",
            "id": "injectable-HeaderAuthService-a99f04f29c37ddb24d993a99109f3a26",
            "file": "src/app/header.service.ts",
            "properties": [
                {
                    "name": "subject",
                    "defaultValue": "new Subject<string>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getUname",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "setUname",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject , Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class HeaderAuthService {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    subject = new Subject<string>();\r\n\r\n    setUname(name: string) {\r\n      this.subject.next(name);\r\n    }\r\n\r\n    getUname(): Observable<string> {\r\n     return this.subject.asObservable();\r\n    }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "ObservableService",
            "id": "injectable-ObservableService-2eb6157e05b8c17134f4e5eaf546f04d",
            "file": "src/app/fbm/observable/observable.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "'http://jsonplaceholder.typicode.com/users'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserdata",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class ObservableService {\r\n\r\n    constructor() {\r\n\r\n    }\r\n    public url = 'http://jsonplaceholder.typicode.com/users';\r\n\r\n    getUserdata(): Observable<any> {\r\n        const observableObject = new Observable((observer) => {\r\n            observer.next(this.url);\r\n\r\n            setTimeout(() => {\r\n                observer.next('String Get Reflected from Observable next method');\r\n                // observer.unsubscribe()\r\n            }, 5000);\r\n        });\r\n        return observableObject;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "SkillServiceService",
            "id": "injectable-SkillServiceService-50da297561bddb32547f20e11685620b",
            "file": "src/app/skill-m/skill-service.service.ts",
            "properties": [
                {
                    "name": "Company",
                    "defaultValue": "'Persistent System Pvt. Ltd.'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SkillServiceService {\r\n\r\n  constructor() { }\r\n\r\n  Company = 'Persistent System Pvt. Ltd.'; // Bydefault it is public\r\n\r\n getName(): string {\r\n   return this.Company;\r\n }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "type": "injectable"
        },
        {
            "name": "StartupmService",
            "id": "injectable-StartupmService-541fbe13a0d04a567e321403af98cd0f",
            "file": "src/app/services/startupm.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getColumnDef",
                    "args": [],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "getHistoricalStartupMetricrowData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "getHistoricalStudiesRowData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport interface ColumnDefination {\r\n  headerName?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StartupmService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getHistoricalStartupMetricrowData(): Observable<any> {\r\n    return this.http.get('assets/data/getInvestigatorList.json');\r\n  }\r\n\r\n  getHistoricalStudiesRowData(): Observable<any> {\r\n    return this.http.get('assets/data/performHistAnalysisDetail.json');\r\n  }\r\n\r\n  getColumnDef(): [] {\r\n    const columndata: any = [];\r\n    columndata.push(\r\n      { headerName: 'StudyID', field: 'studyId' },\r\n      { headerName: 'Tags', field: 'tagKeys' },\r\n      { headerName: 'Startup Time (FPA to FSI in Days)', field: 'start_up_time' },\r\n      { headerName: 'FSI_TO_FSS', field: 'fsi_to_fss' },\r\n      { headerName: 'ACTIVE_SITES', field: 'active_sites' },\r\n      { headerName: 'SITES_ACTIVELY_SCREENING', field: 'sites_actively_screening' },\r\n      { headerName: 'SITE_INIT_PERIOD', field: 'site_init_period' },\r\n      { headerName: 'SI_25_PERCENT', field: 'si_25_percent' },\r\n      { headerName: 'SI_50_PERCENT', field: 'si_50_percent' },\r\n      { headerName: 'SI_90_PERCENT', field: 'si_90_percent' },\r\n      { headerName: 'AVG_SITE_INIT_RATE', field: 'avg_site_init_rate' },\r\n      { headerName: 'INITIATED_SITES', field: 'initiated_sites' }\r\n    );\r\n    return columndata;\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SubjectService",
            "id": "injectable-SubjectService-231802e3d815cf8b0d462d4179ed11be",
            "file": "src/app/fbm/subject.service.ts",
            "properties": [
                {
                    "name": "msg",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "msgBroadcaster",
                    "defaultValue": "this.msg.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setMsg",
                    "args": [
                        {
                            "name": "getMsg",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "getMsg",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubjectService {\r\n\r\n  private msg = new Subject<any>();\r\n  public msgBroadcaster = this.msg.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setMsg(getMsg) {\r\n    this.msg.next(getMsg);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-9973b96b6d8f218bfe2ba818d085a9f5",
            "file": "src/app/users/user.service.ts",
            "properties": [
                {
                    "name": "covidUrl",
                    "defaultValue": "'http://localhost:3000/Todos'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "'http://jsonplaceholder.typicode.com/users'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "deleteCovidData",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCovidPatient",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "getUserdata",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "getUserdataPromis",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "isloginCovidMChild",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "isuserLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "postSelectedData",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postUserdata",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class UserService {\r\n\r\n    public url = 'http://jsonplaceholder.typicode.com/users';\r\n    public covidUrl = 'http://localhost:3000/Todos';\r\n    public id: any;\r\n    public data: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getUserdata(): Observable<any> {\r\n       return this.http.get(this.url);\r\n    }\r\n\r\n    getUserdataPromis(): Promise<any> {\r\n        return this.http.get(this.url).toPromise();\r\n    }\r\n\r\n    postUserdata(value): Observable<any> {\r\n        return this.http.post(this.url + '/', value);\r\n    }\r\n\r\n    getCovidPatient(): Observable<any> {\r\n        return this.http.get(this.covidUrl + '/');\r\n    }\r\n\r\n    // below method check the user is login or not depends on status gives\r\n    // permission to the url visit or not for particular component\r\n\r\n    isuserLogin(): boolean {\r\n      return true;\r\n    }\r\n\r\n    isloginCovidMChild(): boolean {\r\n        return false;\r\n    }\r\n\r\n    postSelectedData(value): Observable<any> {\r\n        return this.http.post(this.covidUrl, value);\r\n    }\r\n\r\n    deleteCovidData(id) {\r\n      return this.http.delete(this.covidUrl + '/' + id);\r\n    }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-7979ed501e6fb74fbc17b793cfbb5718",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo() {\r\n    return browser.get(browser.baseUrl) as Promise<any>;\r\n  }\r\n\r\n  getTitleText() {\r\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElementTwo",
            "id": "class-ElementTwo-d27f77fce246d782112bcc764df2bd8e",
            "file": "src/app/lit-element-component/elements/lit-element-two.ts",
            "type": "class",
            "sourceCode": "import { LitElement, html, customElement, property } from 'lit-element';\r\n// import {LitElement, html, customElement, property} from 'lit-element';\r\n\r\n@customElement('element-two')\r\n\r\nexport class ElementTwo extends LitElement {\r\n\r\n    @property() details;\r\n\r\n    render() {\r\n        return html`<div>\r\n                   <p>I am Lit-Element Two</p>\r\n                   </div>`\r\n    }\r\n\r\n}",
            "properties": [
                {
                    "name": "details",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "property",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [
                {
                    "name": "render",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "extends": "LitElement"
        },
        {
            "name": "HelloElement",
            "id": "class-HelloElement-88115f8b767b9ab1115faa2a62fac7fd",
            "file": "src/app/lit-element-component/elements/lit-element.ts",
            "type": "class",
            "sourceCode": "import {LitElement, html, customElement, property} from 'lit-element';\r\n\r\nconsole.log('hello-world module');\r\n\r\n@customElement('hello-world')\r\n\r\nexport class HelloElement extends LitElement {\r\n\r\n    @property() name;\r\n\r\n    render() {\r\n        return html`<div>\r\n                   Hello Angular ${this.name} \r\n                   </div>`;\r\n    }\r\n}\r\n\r\n// customElements.define('hello-world', HelloElement);",
            "properties": [
                {
                    "name": "name",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "property",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "methods": [
                {
                    "name": "render",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "extends": "LitElement"
        },
        {
            "name": "Product",
            "id": "class-Product-a7c79602e5b46d712f44b8a4d889baec",
            "file": "src/app/products/Product.ts",
            "type": "class",
            "sourceCode": "export class Product {\r\n    id: number;\r\n    name: string;\r\n    imgPath: string;\r\n    category: string;\r\n    price: number;\r\n    constructor(id: number, name: string, category: string, price: number, imgPath: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.imgPath = imgPath;\r\n        this.price = price;\r\n        this.category = category;\r\n    }\r\n    getId(): number {\r\n        return this.id;\r\n    }\r\n    setPrice(price: number) {\r\n        this.price = price;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "type": "number"
                    },
                    {
                        "name": "imgPath",
                        "type": "string"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "category",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "imgPath",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imgPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "getId",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "setPrice",
                    "args": [
                        {
                            "name": "price",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "LoginDirective",
            "id": "directive-LoginDirective-f858aa319630ff9d190809594ac0989e",
            "file": "src/app/DirectiveL/login.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[change]'\r\n})\r\n\r\nexport class LoginDirective {\r\n\r\n    constructor(private e1: ElementRef) {\r\n        e1.nativeElement.style.backgroundColor = 'yellow';\r\n    }\r\n\r\n    @HostListener('mouseenter') onMouseEnter() {\r\n        this.highlight('green');\r\n    }\r\n\r\n    highlight(color) {\r\n        this.e1.nativeElement.style.backgroundColor = color;\r\n    }\r\n\r\n    @HostListener('mouseleave') onMouseLeave() {\r\n        this.highlight(null);\r\n    }\r\n\r\n}\r\n",
            "selector": "[change]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "line": 14
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "line": 22
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "highlight",
                    "args": [
                        {
                            "name": "color",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "e1",
                        "type": "ElementRef"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "e1",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AgGridTreeComponent",
            "id": "component-AgGridTreeComponent-e6bfef3310bf5b4dc9d4eaf676b76c3b",
            "file": "src/app/ag-grid-tree/ag-grid-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ag-grid-tree",
            "styleUrls": [
                "./ag-grid-tree.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autoGroupColumnDef",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "columnDefs",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getDataPath",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "gridOptions",
                    "type": "GridOptions",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupDefaultExpanded",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "modules",
                    "defaultValue": "AllModules",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rowData",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { GridApi, ColumnApi, GridReadyEvent, GridOptions } from 'ag-grid-community';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\n@Component({\r\n  selector: 'app-ag-grid-tree',\r\n  templateUrl: './ag-grid-tree.component.html',\r\n  styleUrls: ['./ag-grid-tree.component.scss']\r\n})\r\nexport class AgGridTreeComponent implements OnInit {\r\n\r\n  public checked = false;\r\n  public gridOptions: GridOptions;\r\n  public groupDefaultExpanded;\r\n  public getDataPath;\r\n  public autoGroupColumnDef;\r\n  public columnDefs: any;\r\n  public rowData: any;\r\n  public modules = AllModules;\r\n  constructor() {\r\n    this.columnDefs = [{ field: 'jobTitle' }, { field: 'employmentType' }];\r\n\r\n    this.rowData = [\r\n      {\r\n        orgHierarchy: ['Erica Rogers'],\r\n        jobTitle: 'CEO',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett'],\r\n        jobTitle: 'Exec. Vice President',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Esther Baker'],\r\n        jobTitle: 'Director of Operations',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson'],\r\n        jobTitle: 'Fleet Coordinator',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson', 'Leah Flowers'],\r\n        jobTitle: 'Parts Technician',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson', 'Tammy Sutton'],\r\n        jobTitle: 'Service Technician',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Esther Baker', 'Derek Paul'],\r\n        jobTitle: 'Inventory Control',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Francis Strickland'],\r\n        jobTitle: 'VP Sales',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Francis Strickland', 'Morris Hanson'],\r\n        jobTitle: 'Sales Manager',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Francis Strickland', 'Todd Tyler'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Francis Strickland', 'Bennie Wise'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Erica Rogers', 'Malcolm Barrett', 'Francis Strickland', 'Joel Cooper'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Permanent'\r\n      }\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataPath = (data) => {\r\n     // console.log(data);\r\n      return data.orgHierarchy;\r\n    };\r\n\r\n    this.autoGroupColumnDef = {\r\n      headerName: 'Organisation Hierarchy',\r\n      pinned: 'left',\r\n      width: 500,\r\n      cellRendererParams: { suppressCount: true }\r\n    };\r\n    this.groupDefaultExpanded = -1;\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// .country_detail_grid{\r\n  \r\n// }",
                    "styleUrl": "./ag-grid-tree.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <ag-grid-angular \r\n    #agGrid \r\n    id=\"myGrid\"  \r\n    class=\"ag-theme-material country_detail_grid\"\r\n    [columnDefs]=\"columnDefs\" \r\n    [rowData]=\"rowData\"\r\n    [treeData]=\"true\"\r\n    [modules]=\"modules\"\r\n    [animateRows]=\"true\"\r\n    [getDataPath]=\"getDataPath\"\r\n    [autoGroupColumnDef]=\"autoGroupColumnDef\"\r\n    [groupDefaultExpanded]=\"groupDefaultExpanded\"\r\n    [gridOptions]=\"gridOptions\"\r\n   >\r\n  </ag-grid-angular>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-122ea95457b129b674bf13f0b225f9ec",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DataService"
                },
                {
                    "name": "HeaderAuthService"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'Angular Application'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { DataService } from './login/data.service';\r\nimport { HeaderAuthService } from './header.service';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignUpFormComponent } from './signup/signupform.component';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [DataService, HeaderAuthService]\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular Application';\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(SignUpFormComponent, {\r\n      width: '250px', height: '500px'\r\n      // data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     // console.log('The dialog was closed');\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-routing-header></app-routing-header>\r\n<!-- <button class=\"btn btn-primary\" (click)=\"openDialog()\">Sign UP</button> -->\r\n<div>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<!-- <app-userdetails></app-userdetails> -->\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CanactivatechildComponent",
            "id": "component-CanactivatechildComponent-2a005b88d7097b1a8656bc0d000696ef",
            "file": "src/app/covid19-m/canactivatechild/canactivatechild.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-canactivatechild",
            "styleUrls": [
                "./canactivatechild.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./canactivatechild.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-canactivatechild',\r\n  templateUrl: './canactivatechild.component.html',\r\n  styleUrls: ['./canactivatechild.component.scss']\r\n})\r\nexport class CanactivatechildComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./canactivatechild.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <h1>\r\n        <p>canactivatechild works!</p>\r\n    </h1>\r\n    <div>\r\n        \r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "CovidFormComponent",
            "id": "component-CovidFormComponent-af48f38c0e02a06db04c19a91567a938",
            "file": "src/app/covid19-m/covid-form/covid-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-covid-form",
            "styleUrls": [
                "./covid-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./covid-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-covid-form',\r\n  templateUrl: './covid-form.component.html',\r\n  styleUrls: ['./covid-form.component.scss']\r\n})\r\nexport class CovidFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./covid-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2 mat-dialog-title>Install Angular</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <h3>Develop across all platforms</h3>\r\n  <p>Learn one way to build applications with Angular and reuse your code and abilities to build\r\n    apps for any deployment target. For web, mobile web, native mobile and native desktop.</p>\r\n\r\n  <h3>Speed &amp; Performance</h3>\r\n  <p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web\r\n    Workers and server-side rendering. Angular puts you in control over scalability. Meet huge\r\n    data requirements by building data models on RxJS, Immutable.js or another push-model.</p>\r\n\r\n  <h3>Incredible tooling</h3>\r\n  <p>Build features quickly with simple, declarative templates. Extend the template language with\r\n    your own components and use a wide array of existing components. Get immediate Angular-specific\r\n    help and feedback with nearly every IDE and editor. All this comes together so you can focus\r\n    on building amazing apps rather than trying to make the code work.</p>\r\n\r\n  <h3>Loved by millions</h3>\r\n  <p>From prototype through global deployment, Angular delivers the productivity and scalable\r\n    infrastructure that supports Google's largest applications.</p>\r\n\r\n  <h3>What is Angular?</h3>\r\n\r\n  <p>Angular is a platform that makes it easy to build applications with the web. Angular\r\n    combines declarative templates, dependency injection, end to end tooling, and integrated\r\n    best practices to solve development challenges. Angular empowers developers to build\r\n    applications that live on the web, mobile, or the desktop</p>\r\n\r\n  <h3>Architecture overview</h3>\r\n\r\n  <p>Angular is a platform and framework for building client applications in HTML and TypeScript.\r\n  Angular is itself written in TypeScript. It implements core and optional functionality as a\r\n  set of TypeScript libraries that you import into your apps.</p>\r\n\r\n  <p>The basic building blocks of an Angular application are NgModules, which provide a compilation\r\n  context for components. NgModules collect related code into functional sets; an Angular app is\r\n  defined by a set of NgModules. An app always has at least a root module that enables\r\n  bootstrapping, and typically has many more feature modules.</p>\r\n\r\n  <p>Components define views, which are sets of screen elements that Angular can choose among and\r\n  modify according to your program logic and data. Every app has at least a root component.</p>\r\n\r\n  <p>Components use services, which provide specific functionality not directly related to views.\r\n  Service providers can be injected into components as dependencies, making your code modular,\r\n  reusable, and efficient.</p>\r\n\r\n  <p>Both components and services are simply classes, with decorators that mark their type and\r\n  provide metadata that tells Angular how to use them.</p>\r\n\r\n  <p>The metadata for a component class associates it with a template that defines a view. A\r\n  template combines ordinary HTML with Angular directives and binding markup that allow Angular\r\n  to modify the HTML before rendering it for display.</p>\r\n\r\n  <p>The metadata for a service class provides the information Angular needs to make it available\r\n  to components through Dependency Injection (DI).</p>\r\n\r\n  <p>An app's components typically define many views, arranged hierarchically. Angular provides\r\n  the Router service to help you define navigation paths among views. The router provides\r\n  sophisticated in-browser navigational capabilities.</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Install</button>\r\n</mat-dialog-actions>\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->"
        },
        {
            "name": "FriendsComponent",
            "id": "component-FriendsComponent-3299bcb5a339dba93bd168023094c1ed",
            "file": "src/app/fbm/friends/friends.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-friends",
            "styleUrls": [
                "./friends.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./friends.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ids",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "valueset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FbserviceService } from '../fbservice.service';\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n\r\n  public ids: any;\r\n  constructor(private fbser: FbserviceService) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  valueset() {\r\n     this.fbser.setdata(this.ids);\r\n     console.log(this.ids);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./friends.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fbser",
                        "type": "FbserviceService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "fbser",
                        "type": "FbserviceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>friends works!</p>\r\n<div>\r\n    <input type=\"text\" class=\"form-control\" name=\"ids\" [(ngModel)]=\"ids\" >\r\n    <button (click)=\"valueset()\">set</button>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9ec33159d80027dff1acd1fc3302c437-1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "UN",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { HeaderAuthService } from '../header.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  UN: any;\r\n  constructor(private authservice: HeaderAuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authservice.getUname().subscribe((value) => {\r\n      this.UN = value;\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authservice",
                        "type": "HeaderAuthService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authservice",
                        "type": "HeaderAuthService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div>\r\n    Welcome to {{UN}}\r\n</div>\r\n"
        },
        {
            "name": "InventoryComponent",
            "id": "component-InventoryComponent-c2004f689dbf82c0f9e1fd9f98f0fb05",
            "file": "src/app/inventory/inventory.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inventory",
            "styleUrls": [
                "./inventory.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./inventory.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "productList",
                    "type": "Array<Product>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../login/data.service';\r\nimport { Product } from '../products/Product';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  productList: Array<Product>;\r\n  constructor(private dstaser: DataService,\r\n              private activatedroute: ActivatedRoute) {\r\n    this.productList = this.dstaser.getProduct();\r\n  }\r\n\r\n  public id: any;\r\n  ngOnInit() {\r\n    this.activatedroute.params.subscribe((data) => {\r\n      this.id = Number(data.abc);\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./inventory.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dstaser",
                        "type": "DataService"
                    },
                    {
                        "name": "activatedroute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "dstaser",
                        "type": "DataService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedroute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>List Of Products</p>\r\n<table class=\"table table-dark\">\r\n    <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Pri</th>\r\n        <th>Image</th>\r\n    </tr>\r\n    <tr *ngFor=\"let item of productList ; let i=index\">\r\n        <td>{{item.id}}</td>\r\n        <td>{{item.name}}</td>\r\n        <td>{{item.price}}</td>\r\n    </tr>\r\n</table>\r\n{{id}}\r\n"
        },
        {
            "name": "LitElementComponent",
            "id": "component-LitElementComponent-271c4477135c6f51a215786ca9bc03a9",
            "file": "src/app/lit-element-component/lit-element.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lit-element",
            "styleUrls": [
                "./lit-element.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lit-element.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "'and First Lit-Element'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HelloElement } from './elements/lit-element';\nimport { ElementTwo } from './elements/lit-element-two';\nimport './elements/element-three.js';\n\n// checking the element present or not otherwise asseration get fails\nconsole.assert(HelloElement !== undefined); \nconsole.assert(ElementTwo !== undefined); \n\n@Component({\n  selector: 'app-lit-element',\n  templateUrl: './lit-element.component.html',\n  styleUrls: ['./lit-element.component.scss']\n})\nexport class LitElementComponent implements OnInit {\n\n  public name = 'and First Lit-Element';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lit-element.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <mat-card>\n        <mat-card-title>Below are the LitElement inside an Angular component!</mat-card-title>\n        \n        <hello-world name=\"{{name}}\"></hello-world>\n        <mat-divider></mat-divider>\n\n        <element-two></element-two>\n        <mat-divider></mat-divider>\n\n        <element-three></element-three>\n        <mat-divider></mat-divider>\n    </mat-card>\n</div>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-9dbad06f9bac571c7394c045475c2750",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeColor",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "checked",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chnagetext",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "color",
                    "defaultValue": "'warn'",
                    "type": "ThemePalette",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "PWD",
                    "defaultValue": "'admin'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "role",
                    "defaultValue": "'179.54567'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "serviceProduct",
                    "type": "Array<string>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "stockChangeForm",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "toggleRef",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'toggle', {static: true}"
                        }
                    ]
                },
                {
                    "name": "UN",
                    "defaultValue": "'admin'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeHeadingColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openSignUpform",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86
                },
                {
                    "name": "toggleChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, AfterContentInit } from '@angular/core';\r\nimport { HeaderAuthService } from '../header.service';\r\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatDialog, MatCheckboxModule  } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { SubmitUserComponent } from './common/submituser.component';\r\nimport {ThemePalette} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, AfterContentInit {\r\n\r\n  public UN = 'admin';\r\n  public PWD = 'admin';\r\n  public changeColor: boolean;\r\n  public role = '179.54567';\r\n  public stockChangeForm: any;\r\n  public serviceProduct: Array<string>;\r\n  public checked: boolean;\r\n  public disabled: boolean;\r\n  public chnagetext: boolean;\r\n  public color: ThemePalette = 'warn';\r\n\r\n  constructor(private auth: HeaderAuthService,\r\n              private fb: FormBuilder, private dialog: MatDialog,\r\n              private router: Router) {\r\n    this.changeColor = false;\r\n    this.serviceProduct = ['Google', 'Facebook', 'MicroSoft', 'BMW'];\r\n  }\r\n\r\n  @ViewChild('toggle', {static: true}) toggleRef: any;\r\n\r\n  ngOnInit() {\r\n    this.stockChangeForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.maxLength(10)]),\r\n      selectedProduct: new FormControl('', [Validators.required]),\r\n      date: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      text: new FormControl({value: '', disabled: this.chnagetext}, [Validators.required, Validators.maxLength(10)]),\r\n      toggle: new FormControl('', [Validators.required])\r\n    });\r\n\r\n    // this.stockChangeForm = this.fb.group({\r\n    //   name: ['', [Validators.required, Validators.minLength(6)]],\r\n    //   selectedProduct: ['', [Validators.required]],\r\n    //   date: ['', Validators.required],\r\n    //   text: ['', [Validators.required, Validators.minLength(10)]]\r\n    // })\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // console.log(this.toggleRef);\r\n  }\r\n\r\n  login() {\r\n    this.auth.setUname(this.UN);\r\n    this.changeColor = false;\r\n  }\r\n\r\n  changeHeadingColor() {\r\n    this.changeColor = true;\r\n    this.role = Number(this.role).toFixed(0);\r\n  }\r\n\r\n  onSubmit(value) {\r\n    console.log(value);\r\n    const dialogRef = this.dialog.open(SubmitUserComponent, {\r\n      width: '400px', height: '200px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log('The dialog was closed');\r\n      console.log(result);\r\n    });\r\n\r\n  }\r\n\r\n  onCancel() {\r\n    this.stockChangeForm.reset();\r\n    // this.router.navigate(['/user']);\r\n  }\r\n\r\n  openSignUpform() {\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.stockChangeForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  toggleChange() {\r\n   console.log(this.stockChangeForm.value.toggle);\r\n   this.chnagetext = this.stockChangeForm.value.toggle;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loginheader {\r\n    background-color: red;\r\n}\r\n\r\n/* .mat-card {\r\n    padding-left: 157px;\r\n} */\r\n\r\n.mat-toolbar-single-row {\r\n    padding: 0 16px 0 99px;\r\n}\r\n\r\n.mat-toolbar {\r\n    background: #3f51b5;\r\n    color: white;\r\n}\r\n\r\n.dec-toolbar {\r\n    padding-left: 11px;\r\n}\r\n\r\n/* .mat-dialog-container {\r\n    padding-bottom: 0px;   \r\n} */\r\n\r\n.mat-card-title{\r\n    text-align: center;\r\n}\r\n\r\n.mat-slide-toggle { \r\n    margin-bottom: 10px;\r\n}\r\n\r\n/* .example-section {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    height: 60px;\r\n} */\r\n  \r\n  ",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "HeaderAuthService"
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "HeaderAuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "templateData": "<div class='container'>\r\n    <div class=\"col-sm-6\">\r\n        <!-- <div [ngClass]=\"changeColor?  'loginheader' : ''\">\r\n            <h1 class=\"\">Login Works !!</h1>\r\n        </div>\r\n        <div class='row'>\r\n            <div>\r\n                <h4>Data Binding Approach {{role}}</h4>\r\n            </div>\r\n            Enter Username: <input type=\"text\" [(ngModel)]=\"UN\" name=\"UN\"><br>\r\n            Enter Password: <input type=\"password\" [(ngModel)]=\"PWD\" name=\"PWD\"><br>\r\n            value change : {{UN}}\r\n            <button (click)=\"login()\">Login</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"changeHeadingColor()\">Change Heading Color</button>\r\n        </div> -->\r\n        <div class=\"row\" style=\"margin-top: 26px; margin-right: 26px;\">\r\n            <mat-card>\r\n                <div>\r\n                    <mat-toolbar class=\"dec-toolbar\">\r\n                        <span>Description</span>\r\n                    </mat-toolbar>\r\n                </div>\r\n                <div>\r\n                    <mat-card-content style=\"margin-top: 28px; margin-bottom: 24px;\">\r\n                        <p style=\"font-size:23px\">\r\n                            Webpack is a module bundler (manages and loads independent modules). It takes dependent\r\n                            modules\r\n                            and compiles them to a single (file) bundle. You can use this bundle while developing apps\r\n                            using\r\n                            command line or, by configuring it using webpack.config file.\r\n                            Babel is a JavaScript compiler and transpiler. It is used to convert one source code to\r\n                            other.\r\n                            Using this you will be able to use the new ES6 features in your code where, babel converts\r\n                            it into\r\n                            plain old ES5 which can be run on all browsers.\r\n                        </p>\r\n                    </mat-card-content>\r\n\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"row\" style=\"margin-top: 26px;\">\r\n            <mat-card>\r\n                <!-- <mat-toolbar>\r\n                    <span>Welcome to New Stock of Market</span>\r\n                </mat-toolbar> -->\r\n                <mat-card-title>Welcome to New Stock of Market</mat-card-title>\r\n                <div class=\"row\">\r\n                </div>\r\n                <div style=\"margin-top: 26px;\">\r\n                    <form action=\"\" [formGroup]=\"stockChangeForm\" fxLayoutAlign=\"center center\" novalidate\r\n                        fxLayoutGap=\"10px\">\r\n                        <div class=\"example-container\">\r\n\r\n                            <mat-card-content>\r\n                                <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n                                    <mat-label>Please Enter Full Name</mat-label>\r\n                                    <input formControlName=\"name\" matInput>\r\n                                    <mat-hint align=\"end\">Max 10 Characters Necessary.</mat-hint>\r\n                                    <mat-error *ngIf=\"hasError('name', 'required')\">Name is required</mat-error>\r\n                                    <mat-error *ngIf=\"hasError('name', 'maxLength')\">Max Char 10\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                                <br>\r\n                                <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n                                    <mat-label>Select Product Service</mat-label>\r\n                                    <mat-select formControlName=\"selectedProduct\">\r\n                                        <mat-option *ngFor=\"let item of serviceProduct\" [value]=\"item\">{{item}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                                <br>\r\n                                <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n                                    <mat-label>Choose a date</mat-label>\r\n                                    <input matInput formControlName=\"date\" [matDatepicker]=\"picker\">\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker>\r\n                                </mat-form-field>\r\n                                <br>\r\n                                <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n                                    <mat-label>Enter your email</mat-label>\r\n                                    <input placeholder=\"pat@example.com\" matInput formControlName=\"email\" required>\r\n                                    <mat-error *ngIf=\"stockChangeForm.get('email').hasError('required')\">You must enter\r\n                                        a value</mat-error>\r\n                                    <mat-error *ngIf=\"stockChangeForm.get('email').hasError('email')\">Please Enter Valid\r\n                                        Email</mat-error>\r\n                                </mat-form-field>\r\n                                <br>\r\n                                <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n                                    <mat-label>Description</mat-label>\r\n                                    <textarea formControlName=\"text\" matInput></textarea>\r\n                                    <mat-hint align=\"end\">Not more then 10 characters long.</mat-hint>\r\n                                    <mat-error *ngIf=\"hasError('text', 'required')\">Address is required</mat-error>\r\n                                    <mat-error *ngIf=\"hasError('text', 'maxLength')\">You have more than 10\r\n                                        characters</mat-error>\r\n                                </mat-form-field>\r\n                            </mat-card-content>\r\n                            <section class=\"example-section\">\r\n                                <mat-slide-toggle class=\"example-margin\" (change)=\"toggleChange()\"\r\n                                    formControlName=\"toggle\" #toggle [color]=\"color\">\r\n                                    Disabled !\r\n                                </mat-slide-toggle>\r\n                            </section>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <mat-card-actions align=\"center\">\r\n                                <button mat-raised-button color=\"primary\" [disabled]=\"!stockChangeForm.valid\"\r\n                                    (click)=\"onSubmit(stockChangeForm.value)\">Submit</button>\r\n                                <button type=\"button\" mat-raised-button color=\"warn\"\r\n                                    (click)=\"onCancel()\">Cancel</button>\r\n                                <button mat-stroked-button type=\"button\" (click)=\"openSignUpform()\">Sign Up</button>\r\n                            </mat-card-actions>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n    <!-- to check the \r\n        <button type=\"button\" mat-raised-button color=\"warn\"\r\n    (click)=\"onCancel()\">Cancel</button> -->\r\n</div>"
        },
        {
            "name": "MaharashtraReportComponent",
            "id": "component-MaharashtraReportComponent-f726fa4c39e479b839c1ef8fc28eff3b",
            "file": "src/app/covid19-m/maharashtra-report/maharashtra-report.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-maharashtra-report",
            "styleUrls": [
                "./maharashtra-report.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./maharashtra-report.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maharashtra-report',\r\n  templateUrl: './maharashtra-report.component.html',\r\n  styleUrls: ['./maharashtra-report.component.scss']\r\n})\r\nexport class MaharashtraReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./maharashtra-report.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <div>\r\n        <p>maharashtra-report works!</p>\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['covinax']\">CanActivateChild</button>\r\n        <a [routerLink]=\"[ 'covinax' ]\" routerLinkActive=\"active\">CanActivateChild</a>\r\n    </div>\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>"
        },
        {
            "name": "MyDialogComponentComponent",
            "id": "component-MyDialogComponentComponent-41a2e8259b10bde4c30b04a4cf52465f",
            "file": "src/app/fbm/my-dialog-component/my-dialog-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-my-dialog-component",
            "styleUrls": [
                "./my-dialog-component.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./my-dialog-component.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialogRef",
                    "type": "MatDialogRef<MyDialogComponentComponent>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "fname",
                    "defaultValue": "'vaibhav'",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "dilogdata",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n@Component({\r\n  selector: 'app-my-dialog-component',\r\n  templateUrl: './my-dialog-component.component.html',\r\n  styleUrls: ['./my-dialog-component.component.css']\r\n})\r\nexport class MyDialogComponentComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,\r\n              public dialogRef: MatDialogRef<MyDialogComponentComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  fname: any = 'vaibhav';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  dilogdata(value) {\r\n    console.log(value);\r\n    this.dialogRef.close('it was close'); // this msg reflects in subscribe class observable\r\n  }\r\n\r\n  // closeDialogBox() {\r\n  //   this.dialogRef.close(\"it was close\");\r\n  // }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./my-dialog-component.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<MyDialogComponentComponent>"
                    },
                    {
                        "name": "data",
                        "type": "any"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<MyDialogComponentComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n     <mat-dialog-content>\r\n          <h1>Books Market</h1>\r\n     </mat-dialog-content>\r\n     <mat-dialog-actions>\r\n          <form #dilogform=\"ngForm\" (ngSubmit)=\"dilogdata(dilogform.value)\">\r\n               <div class=\"form-group\">\r\n                    <label for=\"\">Name : </label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"firstname\" [(ngModel)]=\"fname\" #fnameRef=\"ngModel\"\r\n                         required>\r\n                    <div *ngIf=\"fnameRef.invalid || (fnameRef.dirty && fnameRef.touched)\" class=\"alert alert-danger\">\r\n                         <div *ngIf=\"fnameRef.errors?.required\">\r\n                              Enter Valid Name\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n               <button class=\"btn btn-success\" [disabled]=\"!dilogform.valid\">Submit</button>\r\n               <!-- <button (click)=\"closeDialogBox()\" class=\"btn btn-primary\">Cancel</button> -->\r\n               <button mat-button mat-dialog-close>Cancel</button>\r\n          </form>\r\n     </mat-dialog-actions>\r\n     \r\n</div>"
        },
        {
            "name": "ObservablechildComponent",
            "id": "component-ObservablechildComponent-045930aa7eff987da1d55e7bad5df5b2",
            "file": "src/app/fbm/observablechild/observablechild.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-observablechild",
            "styleUrls": [
                "./observablechild.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./observablechild.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rafelTitle",
                    "line": 11,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changename",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "getCount",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SubjectService } from '../subject.service';\r\n\r\n@Component({\r\n  selector: 'app-observablechild',\r\n  templateUrl: './observablechild.component.html',\r\n  styleUrls: ['./observablechild.component.scss']\r\n})\r\nexport class ObservablechildComponent implements OnInit {\r\n\r\n@Input() rafelTitle: any;\r\n@Output() valueChange = new EventEmitter<any>();\r\n\r\n  constructor(private subjectService: SubjectService) { }\r\n\r\n  ngOnInit() {\r\n    this.subjectService.msgBroadcaster.subscribe(data => {\r\n      alert(data);\r\n    });\r\n  }\r\n\r\n  changename() {\r\n    this.valueChange.emit('5 Jets');\r\n  }\r\n\r\n  getCount(): number {\r\n    return 101;\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./observablechild.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "subjectService",
                        "type": "SubjectService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "subjectService",
                        "type": "SubjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div style=\"display: inline-flex;\">\r\n    <mat-card-title>observablechild works! {{rafelTitle}}</mat-card-title>\r\n    <button mat-raised-button color=\"primary\" (click)=\"changename()\">Emit Event</button>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ObservableComponent",
            "id": "component-ObservableComponent-f0a75c5b6e20be5324047c1f0ad1ced8",
            "file": "src/app/fbm/observable/observable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-observable",
            "styleUrls": [
                "./observable.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./observable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "boxRef",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'box', {static: true}"
                        }
                    ]
                },
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "inputValue",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "notSure",
                    "type": "unknown",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rafel",
                    "defaultValue": "'Welcome Rafel to India'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "blurevent",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeSub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90
                },
                {
                    "name": "getName",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "keyName",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "openDialogBox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked,\r\n  AfterViewInit, AfterViewChecked, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ObservableService } from './observable.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MyDialogComponentComponent } from '../my-dialog-component/my-dialog-component.component';\r\nimport { SubjectService } from '../subject.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-observable',\r\n  templateUrl: './observable.component.html',\r\n  styleUrls: ['./observable.component.css']\r\n})\r\nexport class ObservableComponent implements OnChanges, OnInit, AfterContentInit,\r\nAfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\r\n\r\n  constructor(private observable: ObservableService,\r\n              public dialog: MatDialog,\r\n              private subjectService: SubjectService) {\r\n              this.notSure = 'this is unknown datatype';\r\n   // alert('1. on changes called');\r\n  }\r\n\r\n  public data: any;\r\n  public rafel = 'Welcome Rafel to India';\r\n  public inputValue;\r\n  public notSure: unknown;\r\n  @ViewChild('box' , {static: true}) boxRef: any;\r\n\r\n  // ngDoCheck(): void {\r\n  //   alert('');\r\n  // }\r\n\r\n  ngAfterContentInit(): void {\r\n   // alert('4. after content init called');\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // alert('5. after content check called');\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // alert('6. after view init called');\r\n    \r\n  }\r\n  ngAfterViewChecked(): void {\r\n   // alert('7. after view init checked');\r\n  }\r\n  ngOnDestroy(): void {\r\n   // alert('8. on destroy called');\r\n  }\r\n\r\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.observable.getUserdata().subscribe((res) => {\r\n      this.data = res;\r\n    });\r\n    console.log(this.data);\r\n   // alert('2. ngOninit Called');\r\n  }\r\n\r\n  openDialogBox() {\r\n   const dialogRef = this.dialog.open(MyDialogComponentComponent, {\r\n      width: '300px', height: '250px'\r\n    });\r\n\r\n   dialogRef.afterClosed().subscribe(result => {\r\n      // console.log('The dialog was closed');\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  keyName(event) {\r\n   // console.log(event.target.value); // works if method have $event\r\n    console.log(this.boxRef);\r\n  }\r\n\r\n  blurevent(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  getName(value) {\r\n   this.rafel = value;\r\n  }\r\n\r\n  // below method pass the calue to child to subject from rxjs\r\n  changeSub() {\r\n    this.subjectService.setMsg(this.inputValue);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".obser {\r\n    text-align: center;\r\n    background-color: aqua;\r\n}",
                    "styleUrl": "./observable.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "observable",
                        "type": "ObservableService"
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    },
                    {
                        "name": "subjectService",
                        "type": "SubjectService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "observable",
                        "type": "ObservableService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "subjectService",
                        "type": "SubjectService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnInit",
                "AfterContentInit",
                "AfterContentChecked",
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\">\r\n    <h1 class=\"obser\"> Welcome to Observable of FB Module </h1>\r\n    <!-- <ng-container *ngFor=\"let item of data\"> {{item.name}}</ng-container> -->\r\n    <div> {{data}} </div>\r\n    <button class=\"btn btn-primary\" (click)=\"openDialogBox()\">Open Form</button>\r\n    <div>\r\n        <label for=\"\">Name</label>\r\n        <!-- <input type=\"text\" #box (keyup)=\"keyName(box.value)\"> -->\r\n        <input type=\"text\" #box (keyup.enter)=\"keyName(box.value)\" (blur)=\"blurevent(box.value)\"\r\n        class=\"form-control\" placeholder=\"Please Enter Your Good Name\">\r\n        <p>{{box.value}}</p>\r\n    </div>\r\n    <div>\r\n        <div>\r\n            <p>get count from method get call from child component</p>\r\n           {{observableChild.getCount()}}\r\n        </div>\r\n        <app-observablechild \r\n        [rafelTitle]=\"rafel\"\r\n        (valueChange)=\"getName($event)\"\r\n        #observableChild\r\n         ></app-observablechild>   \r\n    </div>\r\n    <div class=\"row\">\r\n        <div>\r\n            <label for=\"\">Enter Subject Name</label>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"inputValue\">\r\n        </div>\r\n        <div>\r\n            <button mat-stroked-button color=\"warn\" (click)=\"changeSub()\">Change Subject</button>\r\n        </div>\r\n        <mat-card-title>Below line is mat divider</mat-card-title>\r\n        <mat-divider></mat-divider>\r\n    </div>\r\n    <div class=\"row\">\r\n       <mat-card-title>{{notSure}}</mat-card-title>\r\n       <mat-divider></mat-divider>\r\n    </div>\r\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-0dd3b9262b25e3bf70e3613baa9ebca8",
            "file": "src/app/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Page Not Found</h1>\r\n"
        },
        {
            "name": "PepoleComponent",
            "id": "component-PepoleComponent-f98c544bc7a8898d92ecb6e517a62a4d",
            "file": "src/app/fbm/pepole/pepole.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pepole",
            "styleUrls": [
                "./pepole.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pepole.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getid",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "heading",
                    "defaultValue": "'this is facebookPlace'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FbserviceService } from '../fbservice.service';\r\n\r\n@Component({\r\n  selector: 'app-pepole',\r\n  templateUrl: './pepole.component.html',\r\n  styleUrls: ['./pepole.component.css']\r\n})\r\nexport class PepoleComponent implements OnInit {\r\n\r\n  constructor(private fbser: FbserviceService) { }\r\n  public getid: any;\r\n  public heading = 'this is facebookPlace';\r\n  ngOnInit() {\r\n    this.fbser.getData().subscribe((data) => {\r\n      this.getid = data;\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pepole.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fbser",
                        "type": "FbserviceService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "fbser",
                        "type": "FbserviceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <h1>{{heading | camelcase}}</h1>\r\n    \r\n    <app-friends></app-friends>\r\n    <h1>{{getid}}</h1>\r\n</div>"
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-6f6f8893def37ce7d07dd29acd1df18a",
            "file": "src/app/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products",
            "styleUrls": [
                "./products.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isAdmin",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "productList",
                    "type": "Array<Product>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "updatedvalue",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        },
                        {
                            "name": "i",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Product } from './Product';\r\nimport { DataService } from '../login/data.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css'],\r\n  // providers:[DataService]\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  productList: Array<Product>;\r\n  isAdmin = true;\r\n  constructor(private productservice: DataService) {\r\n    this.productList = this.productservice.getProduct();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  delete(index: number) {\r\n    this.productList.splice(index, 1);\r\n\r\n  }\r\n\r\n  validate(value) {\r\n    console.log(value);\r\n\r\n  }\r\n\r\n  updatedvalue(value , i) {\r\n     this.productList[i].price = value;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".imges{\r\n    height: 40px;\r\n    width: 50px;\r\n}",
                    "styleUrl": "./products.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "productservice",
                        "type": "DataService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "productservice",
                        "type": "DataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>List Of Products</p>\r\n\r\nSearch Text : <input type=\"text\"  #SearchRef (keyup)=\"validate(SearchRef.value)\">\r\n<table class=\"table table-dark\">\r\n    <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Pri</th>\r\n        <th>Image</th>\r\n        <th>Action</th>\r\n    </tr>\r\n    <tr *ngFor=\"let item of productList ; let i=index\">\r\n        <td>{{item.id}}</td>\r\n        <td>{{item.name}}</td>\r\n        <td>{{item.price}}</td>\r\n        <td><img [src]=\"item.imgPath\" class=\"imges\"></td>\r\n        <td *ngIf=\"isAdmin\" (click)=\"delete(i)\"><button>Delete</button></td>\r\n        <td><app-pro-updater [price]=\"item.price\" (updatevalue)=\"updatedvalue($event , i)\"></app-pro-updater></td>  \r\n        <!-- child component -->\r\n    </tr>\r\n</table>\r\n<!-- <app-inventory></app-inventory> -->\r\n"
        },
        {
            "name": "ProUpdaterComponent",
            "id": "component-ProUpdaterComponent-7015cbd88ee1e10b385b19cb349206c2",
            "file": "src/app/products/pro-updater/pro-updater.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pro-updater",
            "styleUrls": [
                "./pro-updater.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pro-updater.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "price",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "updatevalue",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "updateprice",
                    "args": [
                        {
                            "name": "price",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "price",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit , Input, Output, EventEmitter} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-pro-updater',\r\n  templateUrl: './pro-updater.component.html',\r\n  styleUrls: ['./pro-updater.component.css']\r\n})\r\nexport class ProUpdaterComponent implements OnInit {\r\n\r\n  @Input() price: number;\r\n\r\n  @Output() updatevalue = new EventEmitter<number>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateprice(price) {\r\n     this.updatevalue.emit(price);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pro-updater.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <input type=\"text\" [(ngModel)]=\"price\">\r\n    <button (click)=\"updateprice(price)\">Update</button>\r\n    \r\n</div>"
        },
        {
            "name": "ReactiveFormComponent",
            "id": "component-ReactiveFormComponent-f64ed58ea072ebe140c4abf8a1f7d5a5",
            "file": "src/app/fbm/reactive-form/reactive-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reactive-form",
            "styleUrls": [
                "./reactive-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./reactive-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changename",
                    "defaultValue": "'vaibhav'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "megaBharatiForm",
                    "defaultValue": "this.fb.group({\r\n    name: ['Enter First Name' , [Validators.required, Validators.minLength(4)]],\r\n    lastname: ['Enter Last Name' , [Validators.required, Validators.minLength(4)]],\r\n    ages : [0, [Validators.required, Validators.minLength(4)]],\r\n    address: this.fb.group({\r\n      street: ['MH'],\r\n      city: [''],\r\n      state: [''],\r\n      zipcode: ['']\r\n    })\r\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "name",
                    "defaultValue": "new FormControl('Hi')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "'Maharashtra Mega Bharati Online 2020'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "todaydate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-reactive-form',\r\n  templateUrl: './reactive-form.component.html',\r\n  styleUrls: ['./reactive-form.component.css']\r\n})\r\nexport class ReactiveFormComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private datePipe: DatePipe) { }\r\n\r\n  public changename = 'vaibhav';\r\n  public title = 'Maharashtra Mega Bharati Online 2020';\r\n  public todaydate: string;\r\n\r\n  name = new FormControl('Hi');\r\n\r\n  // megaBharatiForm = new FormGroup({\r\n  //   name : new FormControl('Vaibhav'),\r\n  //   lastname : new FormControl(''),\r\n  //   age : new FormControl(''),\r\n  //   address : new FormGroup({\r\n  //     street : new FormControl('MH'),\r\n  //     city : new FormControl(''),\r\n  //     state : new FormControl(''),\r\n  //     zipcode : new FormControl('')\r\n  //   })\r\n  // })\r\n\r\n  // Using FormBuilder\r\n\r\n  megaBharatiForm = this.fb.group({\r\n    name: ['Enter First Name' , [Validators.required, Validators.minLength(4)]],\r\n    lastname: ['Enter Last Name' , [Validators.required, Validators.minLength(4)]],\r\n    ages : [0, [Validators.required, Validators.minLength(4)]],\r\n    address: this.fb.group({\r\n      street: ['MH'],\r\n      city: [''],\r\n      state: [''],\r\n      zipcode: ['']\r\n    })\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.todaydate = this.datePipe.transform(Date.now());\r\n  }\r\n\r\n  updateName() {\r\n    this.name.setValue(this.changename);\r\n  }\r\n\r\n  onSubmit(value) {\r\n     console.log(value);\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@media screen and (max-width:520px) {\r\n    .container{\r\n        margin-top: 50px;\r\n        width: 100%;\r\n    }\r\n    \r\n    .subbutton {\r\n        margin-top: 13px;\r\n        width: 100%;\r\n    }\r\n }\r\n\r\n .subbutton {\r\n    margin-top: 13px;\r\n    width: 100%;\r\n}\r\n\r\n",
                    "styleUrl": "./reactive-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "datePipe",
                        "type": "DatePipe"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datePipe",
                        "type": "DatePipe",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" style=\"overflow:auto\">\r\n    <div class=\"row\" style=\"margin-top: 35px;\">\r\n        <p>\r\n            <mat-toolbar>\r\n                <span>Maharashtra Mega Bharati Online 2020</span>\r\n                <span style=\"margin-left: 575px;\">Date : {{todaydate}}</span>\r\n            </mat-toolbar>\r\n        </p>\r\n    </div>\r\n    <div>\r\n        <form [formGroup]=\"megaBharatiForm\" (ngSubmit)=\"onSubmit(megaBharatiForm.value)\">\r\n            <div>\r\n                <label for=\"\">First Name :</label>\r\n                <input type=\"text\" formControlName=\"name\" id=\"name\" class=\"form-control\">\r\n                <div *ngIf=\"megaBharatiForm.get('name').invalid && megaBharatiForm.get('name').errors.required\"\r\n                    class=\"alert alert-danger\">\r\n                    Name is required.\r\n                </div>\r\n                <div *ngIf=\"megaBharatiForm.get('name').invalid && megaBharatiForm.get('name').errors.minlength\"\r\n                    class=\"alert alert-danger\">\r\n                    minlength is 4.\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label for=\"\">Last Name :</label>\r\n                <input type=\"text\" formControlName=\"lastname\" class=\"form-control\" required>\r\n                <!-- <div *ngIf=\"megaBharatiForm.get('lastname').invalid && (megaBharatiForm.get('lastname').dirty || megaBharatiForm.get('lastname').touched)\" class=\"alert alert-danger\">\r\n                  \r\n                </div> -->\r\n                <div *ngIf=\"megaBharatiForm.get('lastname').invalid && megaBharatiForm.get('lastname').errors.required\"\r\n                    class=\"alert alert-danger\">\r\n                    Last Name is Required\r\n                </div>\r\n                <div *ngIf=\"megaBharatiForm.get('lastname').invalid && megaBharatiForm.get('lastname').errors.minlength\"\r\n                    class=\"alert alert-danger\">\r\n                    minlength is 4.\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label for=\"\">Age :</label>\r\n                <input type=\"number\" formControlName=\"ages\" class=\"form-control\" required>\r\n                <div *ngIf=\"megaBharatiForm.get('ages').invalid && megaBharatiForm.get('ages').errors.required\"\r\n                    class=\"alert alert-danger\">\r\n                    Age is Required\r\n                </div>\r\n            </div>\r\n            <div formGroupName=\"address\">\r\n                <h6>Address Details</h6>\r\n                <div>\r\n                    <label for=\"\">Street</label>\r\n                    <input type=\"text\" formControlName=\"street\" class=\"form-control\" required>\r\n                </div>\r\n                <div>\r\n                    <label for=\"\">City</label>\r\n                    <input type=\"text\" formControlName=\"city\" class=\"form-control\" required>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>{{megaBharatiForm.value | json}}</p>\r\n                <p>{{megaBharatiForm.status | json}}</p>\r\n            </div>\r\n            <div class=\"subbutton\">\r\n                <button mat-raised-button color=\"primary\" [disabled]=\"megaBharatiForm.invalid\">Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"
        },
        {
            "name": "RoutingHeaderComponent",
            "id": "component-RoutingHeaderComponent-407418a59b2648ed8d025742619c7d4f",
            "file": "src/app/routing-header/routing-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-routing-header",
            "styleUrls": [
                "./routing-header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./routing-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allroutes",
                    "defaultValue": "['login', 'inventory', 'user', 'fb-M/observable', 'fb-M/reactive-form', 'StartUp', 'ag-grid-tree',\r\n                                    'covid19m']",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getvalue",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "openDialogbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ReactiveFormComponent } from '../fbm/reactive-form/reactive-form.component';\r\n@Component({\r\n  selector: 'app-routing-header',\r\n  templateUrl: './routing-header.component.html',\r\n  styleUrls: ['./routing-header.component.css']\r\n})\r\nexport class RoutingHeaderComponent implements OnInit {\r\n\r\n  public allroutes: Array<any> = ['login', 'inventory', 'user', 'fb-M/observable', 'fb-M/reactive-form', 'StartUp', 'ag-grid-tree',\r\n                                    'covid19m'];\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getvalue(value) {\r\n    console.log(value);\r\n  }\r\n  openDialogbox(): void {\r\n    const dialogRef = this.dialog.open(ReactiveFormComponent, {\r\n      width: '500px', height: '500px'\r\n      // data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      //  this.animal = result;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  background-color: #333;\r\n}\r\n\r\nli {\r\n  float: left;\r\n}\r\n\r\nli a {\r\n  display: block;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 14px 16px;\r\n  text-decoration: none;\r\n}\r\n\r\nli a:hover {\r\n  background-color: #111;\r\n}\r\n\r\n.but{\r\n    float: right;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.routing-button {\r\n  margin-right: 15px;\r\n}",
                    "styleUrl": "./routing-header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav>\r\n    <ul>\r\n        <!-- <li *ngFor=\"let item of allroutes\">\r\n            <a routerLink=\"/{{item}}\" routerLinkActive=\"active\">{{item}}</a>\r\n        </li> or -->\r\n        <li>\r\n            <a [routerLink]=\"['/login']\">Login Form</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/inventory']\" skipLocationChange>Inventory</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/user']\" skipLocationChange>User</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/fb-M/observable']\">FB Observable</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/fb-M/reactive-form']\">FB RDF</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/StartUp']\">Start up</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/ag-grid-tree']\">Ag Grid</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/covid19m']\">Covid19 Module</a>\r\n        </li>\r\n        <li>\r\n            <a [routerLink]=\"['/lit-Elements']\">Lit-Elements</a>\r\n        </li>\r\n        <li>\r\n            <a [routerlink]=\"['/story-book']\">Story Book</a>\r\n        </li>\r\n        <div class=\"routing-button\">\r\n            <button class=\"but\" routerLink=\"/Skill-M/skill-list\">SkillM</button>\r\n            <button class=\"but\" routerLink=\"/fb-M\">FB-M</button>\r\n        </div>\r\n        <!-- <a [routerLink]=\"['/fb-M/dialogComp']\" routerLinkActive=\"router-link-active\" >D</a> -->\r\n        <!-- <select name=\"\" id=\"\">Menu\r\n            <option *ngFor=\"let item of allroutes\" [value]=\"item\" (click)=\"getvalue($event)\">\r\n                <a routerLink=\"/{{item}}\" routerLinkActive=\"active\">{{item}}</a>\r\n            </option>\r\n        </select> -->\r\n    </ul>   \r\n</nav>"
        },
        {
            "name": "SignUpFormComponent",
            "id": "component-SignUpFormComponent-86c10cceb16d159f7669b566d71d1006",
            "file": "src/app/signup/signupform.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signupform",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "signupform.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialogRef",
                    "type": "MatDialogRef<SignUpFormComponent>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "5",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "person",
                    "defaultValue": "{\r\n    name: 'James',\r\n    phone: '1234',\r\n    address: 'India'\r\n\r\n  }",
                    "type": "Person",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "onNoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "submitform",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit , Inject} from '@angular/core';\r\nimport { Person } from './Person';\r\nimport { UserService } from '../users/user.service';\r\nimport { Router } from '@angular/router';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n@Component({\r\n  selector: 'app-signupform',\r\n  templateUrl: 'signupform.component.html',\r\n\r\n})\r\nexport class SignUpFormComponent {\r\n  public id: any = 5;\r\n  person: Person = {\r\n    name: 'James',\r\n    phone: '1234',\r\n    address: 'India'\r\n\r\n  };\r\n\r\n  constructor(private userser: UserService, private router: Router,\r\n              public dialogRef: MatDialogRef<SignUpFormComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n\r\n  submitform(value) {\r\n    console.log(value);\r\n    this.userser.postUserdata(value).subscribe(data => {\r\n     // alert('data submitted');\r\n    });\r\n    this.dialogRef.close('sign up form close');\r\n  }\r\n\r\n  navigate() {\r\n    this.router.navigate(['/inventory', 2]);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "userser",
                        "type": "UserService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SignUpFormComponent>"
                    },
                    {
                        "name": "data",
                        "type": "any"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "userser",
                        "type": "UserService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<SignUpFormComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"container\">\r\n  <mat-dialog-content>\r\n    <h2>SignUp Form </h2>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <form novalidate #signref=\"ngForm\" (ngSubmit)=\"submitform(signref.value)\">\r\n      <div class=\"form-group\">\r\n        <label>ID</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"id\" required [(ngModel)]=\"id\" #idRef=\"ngModel\">\r\n\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"formGroupExampleInput\">Enter Name</label>\r\n        <input type=\"text\" class=\"form-control\" #nameRef=\"ngModel\" minlength=\"5\" [(ngModel)]=\"person.name\"\r\n          id=\"formGroupExampleInput\" name=\"name\" required>\r\n        <div *ngIf=\"nameRef.invalid && (nameRef.dirty || nameRef.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"nameRef.errors.required\">\r\n            Enter Valid Name\r\n          </div>\r\n          <div *ngIf=\"nameRef.errors.minlength\">\r\n            enter Mini 5 char\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"formGroupExampleInput2\">Enter contact number</label>\r\n        <input type=\"text\" class=\"form-control\" #contactref=\"ngModel\" [(ngModel)]=\"person.phone\" name=\"contact\"\r\n          id=\"formGroupExampleInput2\" minlength=\"5\" maxlength=\"10\" required>\r\n        <div *ngIf=\"contactref.invalid && (contactref.dirty || contactref.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"contactref.errors.required\">\r\n            Enter Valid Number\r\n          </div>\r\n          <div *ngIf=\"contactref.errors.minlength\">\r\n            Enter Min 5 number\r\n          </div>\r\n          <div *ngIf=\"contactref.errors.maxlength\">\r\n            Enter Max 5 Number\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"formGroupExampleInput3\">Enter Address</label>\r\n        <input type=\"text\" class=\"form-control\" #addref=\"ngModel\" required [(ngModel)]=\"person.address\" name=\"address\"\r\n          id=\"formGroupExampleInput3\">\r\n        <div *ngIf=\"addref.invalid && (addref.dirty || addref.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"addref.errors.required\">\r\n            Enter re Add\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"signref.form.invalid\">Submit</button>\r\n      <!-- <button (click)=\"navigate()\">GO Inventory</button> -->\r\n      <button mat-button mat-dialog-close>Cancel</button>\r\n    </form>\r\n  </mat-dialog-actions>\r\n</div>"
        },
        {
            "name": "SkillListComponent",
            "id": "component-SkillListComponent-8c54ae7aa976c3e2cb309b7d7be31eef",
            "file": "src/app/skill-m/skill-list/skill-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skill-list",
            "styleUrls": [
                "./skill-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./skill-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SkillServiceService } from '../skill-service.service';\r\n\r\n@Component({\r\n  selector: 'app-skill-list',\r\n  templateUrl: './skill-list.component.html',\r\n  styleUrls: ['./skill-list.component.css'],\r\n})\r\nexport class SkillListComponent implements OnInit {\r\n\r\n  constructor(private skillservice: SkillServiceService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module{\r\n    background-color: salmon;\r\n}",
                    "styleUrl": "./skill-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "skillservice",
                        "type": "SkillServiceService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "skillservice",
                        "type": "SkillServiceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"module\">\r\n    <p>skill-list works!</p>\r\n    <h1>welcome to Skill List Module Component</h1>\r\n    <h2>Company : {{skillservice.getName()}}</h2>\r\n</div>"
        },
        {
            "name": "StartUpComponent",
            "id": "component-StartUpComponent-4711e6722b2f9c77c2d1081e7df69f7a",
            "file": "src/app/startup-metrics-component/StartUpComponent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ag-grid-demo",
            "styleUrls": [
                "./StartUpComponent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./StartUpComponent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agGrid",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'agGrid', {read: ElementRef, static: true}"
                        }
                    ]
                },
                {
                    "name": "allStudies",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "autoGroupColumnDef",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ColumnDefHeaderName",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "columnDefs",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ColumnDefStartupM",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getDataPath",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "gridApi",
                    "type": "GridApi",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "gridColumnApi",
                    "type": "ColumnApi",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "gridOptions",
                    "type": "GridOptions",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "groupDefaultExpanded",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isRowSelectable",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "modules",
                    "defaultValue": "AllModules",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rowData",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rowDataObject",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rowDataStartupM",
                    "defaultValue": "[]",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getColumnDefStudies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149
                },
                {
                    "name": "getHistoricalStartuprowData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144
                },
                {
                    "name": "getMetricNamequantites",
                    "args": [
                        {
                            "name": "element",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStudiesRowData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113
                },
                {
                    "name": "onGridReady",
                    "args": [
                        {
                            "name": "params",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRowSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rowDataObjectArray",
                    "args": [
                        {
                            "name": "studies",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "jsdoctags": [
                        {
                            "name": "studies",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ElementRef, OnChanges } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { GridApi, ColumnApi, GridReadyEvent, GridOptions } from 'ag-grid-community';\r\nimport { StartupmService } from '../services/startupm.service';\r\nimport * as _ from 'underscore';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\n// import \"@ag-grid-enterprise\";\r\n@Component({\r\n  selector: 'app-ag-grid-demo',\r\n  templateUrl: './StartUpComponent.component.html',\r\n  styleUrls: ['./StartUpComponent.component.scss']\r\n})\r\n\r\nexport class StartUpComponent implements OnInit {\r\n\r\n  private gridApi: GridApi;\r\n  private gridColumnApi: ColumnApi;\r\n  public checked = false;\r\n  public gridOptions: GridOptions;\r\n  private isRowSelectable;\r\n  public ColumnDefStartupM: any;\r\n  public rowDataStartupM: any = [];\r\n  public allStudies: any;\r\n  public groupDefaultExpanded;\r\n  public getDataPath;\r\n  public autoGroupColumnDef;\r\n  public columnDefs: any;\r\n  public rowData: any;\r\n  public rowDataObject: any;\r\n  public modules = AllModules;\r\n  public ColumnDefHeaderName: any;\r\n\r\n  @ViewChild('agGrid', { read: ElementRef, static: true }) agGrid: ElementRef;\r\n\r\n  constructor(private startM: StartupmService) {\r\n\r\n    this.columnDefs = [{ field: 'jobTitle' }, { field: 'employmentType' }];\r\n\r\n    this.rowData = [\r\n      {\r\n        orgHierarchy: ['Worldwide'],\r\n        jobTitle: 'CEO',\r\n        employmentType: 'Permanent',\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett'],\r\n        jobTitle: 'Exec. Vice President',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Melt'],\r\n        jobTitle: 'Exec. Vice President',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Melt', 'ABSC'],\r\n        jobTitle: 'Exec. Vice President',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Esther Baker'],\r\n        jobTitle: 'Director of Operations',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson'],\r\n        jobTitle: 'Fleet Coordinator',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson', 'Leah Flowers'],\r\n        jobTitle: 'Parts Technician',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Esther Baker', 'Brittany Hanson', 'Tammy Sutton'],\r\n        jobTitle: 'Service Technician',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Esther Baker', 'Derek Paul'],\r\n        jobTitle: 'Inventory Control',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Francis Strickland'],\r\n        jobTitle: 'VP Sales',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Francis Strickland', 'Morris Hanson'],\r\n        jobTitle: 'Sales Manager',\r\n        employmentType: 'Permanent'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Francis Strickland', 'Todd Tyler'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Francis Strickland', 'Bennie Wise'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Contract'\r\n      },\r\n      {\r\n        orgHierarchy: ['Worldwide', 'Malcolm Barrett', 'Francis Strickland', 'Joel Cooper'],\r\n        jobTitle: 'Sales Executive',\r\n        employmentType: 'Permanent'\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.rowData = this.http.get('https://jsonplaceholder.typicode.com/albums')\r\n    // used pipe | async when data get from http\r\n\r\n    this.getStudiesRowData();\r\n    this.getColumnDefStudies();\r\n    this.getHistoricalStartuprowData();\r\n\r\n    this.getDataPath =  (data) => {\r\n      return data.orgHierarchy;\r\n    };\r\n\r\n    this.autoGroupColumnDef = {\r\n      headerName: 'Geography',\r\n      pinned: 'left',\r\n      cellRendererParams: { suppressCount: true }\r\n    };\r\n    this.groupDefaultExpanded = -1;\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    params.api.sizeColumnsToFit();\r\n  }\r\n\r\n\r\n  onRowSelected(event) {\r\n  }\r\n\r\n\r\n  getHistoricalStartuprowData() {\r\n  }\r\n\r\n\r\n\r\n  getColumnDefStudies() {\r\n    this.ColumnDefStartupM = this.startM.getColumnDef();\r\n    if (this.ColumnDefStartupM.length > 0) {\r\n      const Objectkyes = [];\r\n      this.ColumnDefStartupM.forEach(element => {\r\n        // tslint:disable-next-line: no-string-literal\r\n        Objectkyes.push(element['field'].toLowerCase());\r\n      });\r\n      this.ColumnDefHeaderName = Objectkyes;\r\n    }\r\n  }\r\n\r\n  getStudiesRowData() {\r\n    this.startM.getHistoricalStudiesRowData().subscribe((data) => {\r\n      const studies = data.serviceResponse.studyPerformanceMetrics.study;\r\n      this.rowDataObjectArray(studies);\r\n      this.allStudies = studies.length;\r\n    }, (error) => { console.log('error in fetching json'); });\r\n  }\r\n\r\n  rowDataObjectArray(studies) {\r\n  }\r\n\r\n  getMetricNamequantites(element) {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".country_detail_grid {\r\n    width: 100%;\r\n    height: 263px;\r\n}\r\n\r\n.example-margin {\r\n    margin: 0 10px;\r\n  }\r\n\r\n.mat-icon-button{\r\n    float: right;\r\n}\r\n.mat-checkbox-inner-container .mat-checkbox-inner-container-no-side-margin{\r\n    margin-top: 9px;\r\n}",
                    "styleUrl": "./StartUpComponent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "startM",
                        "type": "StartupmService"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "startM",
                        "type": "StartupmService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"col-sm-6\">\r\n        <mat-checkbox style=\"margin-top: 7px;\" class=\"example-margin\" [(ngModel)]=\"checked\" [disabled]=\"disabled\">\r\n        </mat-checkbox>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <button mat-icon-button class=\"mat-icon-button\" [matMenuTriggerFor]=\"menu\"\r\n          aria-label=\"Example icon-button with a menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-12\">\r\n      <ag-grid-angular \r\n        #agGrid \r\n        id=\"myGrid\" \r\n        class=\"ag-theme-material country_detail_grid\" \r\n        [enableFilter]=\"true\"\r\n        [enableSorting]=\"true\" \r\n        [columnDefs]=\"columnDefs\" \r\n        [rowData]=\"rowData\" \r\n        rowSelection=\"multiple\"\r\n        (rowSelected)=\"onRowSelected($event)\" \r\n        [modules]=\"modules\"\r\n        [treeData]=\"true\"\r\n        [getDataPath]=\"getDataPath\"\r\n        [autoGroupColumnDef]=\"autoGroupColumnDef\"\r\n        [groupDefaultExpanded]=\"groupDefaultExpanded\"\r\n        (gridReady)=\"onGridReady($event)\"\r\n       >\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" style=\"margin-top: 25px;\">\r\n    <div>\r\n      <h6>Historical Studies {{allStudies}}</h6>\r\n    </div>\r\n    <div class=\"col-sm-12\">\r\n      <ag-grid-angular \r\n      #agGrid id=\"myGrid\" \r\n      class=\"ag-theme-material country_detail_grid\"\r\n      [columnDefs]=\"ColumnDefStartupM\" \r\n      [rowData]=\"rowDataStartupM\" \r\n      [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <mat-icon>dialpad</mat-icon>\r\n      <span>Redial</span>\r\n    </button>\r\n    <button mat-menu-item disabled>\r\n      <mat-icon>voicemail</mat-icon>\r\n      <span>Check voice mail</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <mat-icon>notifications_off</mat-icon>\r\n      <span>Disable alerts</span>\r\n    </button>\r\n</mat-menu>  crop_free-->\r\n<mat-menu #menu=\"matMenu\">\r\n  <button mat-menu-item>\r\n    <mat-icon>print</mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n  <button mat-menu-item>\r\n    <mat-icon>file_copy</mat-icon>\r\n    <span>Copy</span>\r\n  </button>\r\n  <button mat-menu-item>\r\n    <mat-icon>import_export</mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n</mat-menu>"
        },
        {
            "name": "StoryBookComponent",
            "id": "component-StoryBookComponent-cc0ffc21b453bafd5400b2f19ba4b812",
            "file": "src/app/story-book/story-book.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-story-book",
            "styleUrls": [
                "./story-book.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./story-book.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-story-book',\n  templateUrl: './story-book.component.html',\n  styleUrls: ['./story-book.component.scss']\n})\nexport class StoryBookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./story-book.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>story-book works!</p>\n"
        },
        {
            "name": "SubmitUserComponent",
            "id": "component-SubmitUserComponent-d838ad2d2b4aacb7e70ad9e53238059b",
            "file": "src/app/login/common/submituser.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-submit-user",
            "styleUrls": [
                "./submituser.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./submituser.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-submit-user',\r\n    templateUrl: './submituser.component.html',\r\n    styleUrls: ['./submituser.component.css']\r\n})\r\n\r\nexport class SubmitUserComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-toolbar {\r\n  background: greenyellow;\r\n}\r\n\r\n.mat-container {\r\n    padding-bottom: 0px;\r\n}\r\n\r\n.mat-dialog-container {\r\n    padding-bottom: 0px;   \r\n}\r\n\r\n.submit-action {\r\n    margin-top: 36px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n",
                    "styleUrl": "./submituser.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\r\n    <mat-dialog-content class=\"mat-container\">\r\n        <!-- <h2 mat-dialog-title>Install Angular</h2> -->\r\n        <mat-toolbar>\r\n            <span>Submitted Successfully</span>\r\n          </mat-toolbar>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"submit-action\" align=\"end\">\r\n        <button mat-stroked-button mat-dialog-close color=\"primary\">OK</button>\r\n        <!-- <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Install</button> -->\r\n    </mat-dialog-actions>\r\n</div>"
        },
        {
            "name": "UserdetailsComponent",
            "id": "component-UserdetailsComponent-5e94f07debbb496aed9539779f5dc212",
            "file": "src/app/userdetails/userdetails.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-userdetails",
            "styleUrls": [
                "./userdetails.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./userdetails.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "userList",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "goNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "goPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../users/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-userdetails',\r\n  templateUrl: './userdetails.component.html',\r\n  styleUrls: ['./userdetails.component.css']\r\n})\r\nexport class UserdetailsComponent implements OnInit {\r\n  public id: any;\r\n  public userList: any;\r\n  constructor(private userser: UserService,\r\n              private activatedroute: ActivatedRoute,\r\n              private router: Router) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedroute.params.subscribe(value => {\r\n      this.id = Number(value.id);\r\n    });\r\n\r\n    this.userser.getCovidPatient().subscribe(data => {\r\n      this.userList = data;\r\n    });\r\n  }\r\n\r\n  getBack() {\r\n    this.router.navigate(['/user']);\r\n  }\r\n\r\n  goPrevious() {\r\n    this.router.navigate(['/userdetails', this.id - 1]);\r\n  }\r\n\r\n  goNext() {\r\n    this.router.navigate(['/userdetails', this.id + 1]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./userdetails.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "userser",
                        "type": "UserService"
                    },
                    {
                        "name": "activatedroute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "userser",
                        "type": "UserService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedroute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div class=\"container\">\r\n  <ng-container *ngFor=\"let item of userList\">\r\n    <ng-container *ngIf=\"item.id == id\">\r\n          {{item.id}} <br>\r\n          {{item.name}} <br>\r\n          {{item.report}} <br>\r\n          {{item.bloodgroup}} <br>\r\n          {{item.age}} <br>\r\n    </ng-container>\r\n  </ng-container>    \r\n</div> -->\r\n<div>\r\n  <mat-card class=\"example-card\">\r\n    <ng-container *ngFor=\"let item of userList\">\r\n      <ng-container *ngIf=\"item.id == id\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"example-header-image\"></div>\r\n          <mat-card-title>{{item.name}}</mat-card-title>\r\n          <mat-card-subtitle>Dog Breed</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>{{item.id}} {{item.report}} {{item.bloodgroup}} {{item.age}}</p>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-button (click)=\"getBack()\">Back</button>\r\n          <button mat-button (click)=\"goPrevious()\">Previous</button>\r\n          <button mat-button (click)=\"goNext()\">Next</button>\r\n        </mat-card-actions>\r\n      </ng-container>\r\n    </ng-container> \r\n  </mat-card>\r\n</div>\r\n"
        },
        {
            "name": "UsersComponent",
            "id": "component-UsersComponent-12d9db9ded1b6d79732bf6c4df21d965",
            "file": "src/app/users/users.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-users",
            "styleUrls": [
                "./users.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./users.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 24,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "newObj",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "patientData",
                    "defaultValue": "[]",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "userList",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "usrser",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteData",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserData",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "postdata",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { EventEmitter } from '';\r\n\r\nexport interface State {\r\n  flag: string;\r\n  name: string;\r\n  population: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  public userList: any;\r\n  public patientData: any = [];\r\n  public newObj: any;\r\n\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(public usrser: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.usrser.getUserdata().subscribe((data => {\r\n      this.userList = data;\r\n    }));\r\n\r\n    this.usrser.getCovidPatient().subscribe(value => {\r\n      this.patientData = value;\r\n    },\r\n      (err) => {\r\n        // getting error when url are wrong\r\n        console.log('error');\r\n      });\r\n  }\r\n\r\n  getUserData(id) {\r\n    this.router.navigate(['/userdetails', id]);\r\n  }\r\n\r\n  getData(http: HttpClient) {\r\n\r\n  }\r\n\r\n  postdata() {\r\n   this.newObj = {\r\n      id: 100,\r\n      name: 'Austria',\r\n      report: '+ve',\r\n      bloodgroup: 'A',\r\n      age: '34'\r\n    };\r\n\r\n   this.usrser.postSelectedData(this.newObj).subscribe(data => {\r\n        // console.log(data);\r\n        this.usrser.getCovidPatient().subscribe(value => {\r\n          this.patientData = value;\r\n        });\r\n   });\r\n   // location.reload();\r\n\r\n  }\r\n\r\n  deleteData(id) {\r\n    this.usrser.deleteCovidData(id).subscribe(data => {\r\n      this.patientData = this.patientData.filter(item => item.id !== id);\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header-tabs {\r\n    margin-left: 25px;\r\n    margin-right: 25px;\r\n    margin-top: 25px;\r\n    border-radius: 8px;\r\n}\r\n\r\n.mat-tab-body {\r\n    margin-top: 25px;\r\n}\r\n\r\n.mat-icon {\r\n    /* margin-right: 17px; */\r\n}",
                    "styleUrl": "./users.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "usrser",
                        "type": "UserService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "usrser",
                        "type": "UserService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div>\r\n    <ul>\r\n        <li *ngFor=\"let item of userList\">\r\n          <a [routerLink]=\"['userdetails',item.id]\" (click)=\"userdetails(item.id)\"> {{item.name}}</a>\r\n        </li>\r\n    </ul>\r\n</div> -->\r\n<div>\r\n  <div class=\"row\">\r\n    <mat-card class=\"header-tabs\">\r\n      <div>\r\n        <button mat-stroked-button color=\"accent\" (click)=\"postdata()\">Add New</button>\r\n      </div>\r\n      <mat-tab-group>\r\n        <mat-tab label=\"First\">\r\n          <div style=\"margin-top: 25px;\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Report</th>\r\n                  <th>Blood Group</th>\r\n                  <th>Age</th>\r\n                  <th>Apply Operations</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let item of patientData; let i = index\">\r\n                  <td>{{item.id}}</td>\r\n                  <td>{{item.name}}</td>\r\n                  <td>{{item.report}}</td>\r\n                  <td>{{item.bloodgroup}}</td>\r\n                  <td>{{item.age}}</td>\r\n                  <td>\r\n                    <!-- <button type=\"button\" (click)=\"getUserData(item.id)\"><img src=\"../../assets/img/visibility-24px.svg\"  alt=\"\"></button> -->\r\n                    <!-- <button type=\"button\" color=\"warn\" (click)=\"deleteData(item.id)\">                     \r\n                    </button> -->\r\n                    <button type=\"button\" (click)=\"getUserData(item.id)\"><mat-icon >account_circle</mat-icon></button> &nbsp;&nbsp;\r\n                    <button type=\"button\" (click)=\"deleteData(item.id)\"><mat-icon>delete</mat-icon></button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n        </mat-tab>\r\n        <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n        <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n  \r\n</div>"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-6925dcad24a361376d4d03722e938763",
            "file": "src/app/welcome/welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pawel-comege",
            "styleUrls": [
                "welcome.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Angular 8 Application'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pawel-comege',\r\n  templateUrl: 'welcome.component.html',\r\n  styleUrls: ['welcome.component.css']\r\n})\r\nexport class WelcomeComponent {\r\n  title = 'Angular 8 Application';\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".heading{\r\n    color: red;\r\n}",
                    "styleUrl": "welcome.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"container\">\r\n     <h1 class=\"heading\">Welcome to {{title}}</h1>\r\n</div>"
        },
        {
            "name": "WorldCountComponent",
            "id": "component-WorldCountComponent-18dad8041bbc94475761b03a293921d4",
            "file": "src/app/covid19-m/worldCount/worldcount.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-world",
            "styleUrls": [
                "worldcount.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "worldcount.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applyHeading",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "giveDate",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "lname",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "patientSatatList",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "rafelform",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "RedZoneHeading",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "RedZoneHeadingFirst",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "executeHooks",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "getCovidPatient",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "getlocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86
                },
                {
                    "name": "getRedZoneList",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "opendialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71
                },
                {
                    "name": "removeItemOfLocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91
                },
                {
                    "name": "setlocal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CovidDataService } from '../services/coviddata.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog} from '@angular/material';\r\nimport { CovidFormComponent } from '../covid-form/covid-form.component';\r\nimport { FormControl, FormGroup, FormBuilder , Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-world',\r\n  templateUrl: 'worldcount.component.html',\r\n  styleUrls: ['worldcount.component.css']\r\n})\r\n\r\nexport class WorldCountComponent implements OnInit {\r\n\r\n  public applyHeading: any;\r\n  public patientSatatList: any;\r\n  public giveDate: any;\r\n  public RedZoneHeading: string;\r\n  public RedZoneHeadingFirst = '';\r\n  public lname: any;\r\n  public rafelform: any;\r\n\r\n  constructor(private covidDataService: CovidDataService,\r\n              private datepipe: DatePipe,\r\n              private router: Router,\r\n              public dialog: MatDialog) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.rafelform = new FormGroup({\r\n      email: new FormControl('abc@gmail.com', [Validators.required])\r\n    });\r\n\r\n    const start = '1234';\r\n    this.patientSatatList = ['MH', ...start.split(''), 'Gujarat', 'MadhyaPradesh', 'Telangana', 'Jammu & Kashmir', 'Ladhakh',\r\n      'Keral', 'Goa', 'Rajasthan', 'GhatisGhad', 'Panjab', 'Delhi', 'AndhraPradesh', 'Zarkhand',\r\n    ];\r\n    // get index value from forEach\r\n    this.patientSatatList.forEach((ele: any, index) => {\r\n      // console.log('states = ' + ele + ' index =' + index);\r\n    });\r\n    // let fri = this.patientSatatList;\r\n    // console.log(fri.slice(2, 7));\r\n    // console.log(this.patientSatatList.splice(1,2,\"A\",\"B\"));\r\n    // console.log(this.patientSatatList.indexOf('GhatisGhad'));\r\n    // console.log(this.patientSatatList.join('-'));\r\n    //  console.log(start.split(''));\r\n    this.giveDate = Date.now();\r\n    // console.log(this.datepipe.transform(this.giveDate, 'M/d/yy, h:mm a'));\r\n  }\r\n\r\n  getCovidPatient() {\r\n    this.covidDataService.getcovidData().subscribe((data) => {\r\n      this.applyHeading = data;\r\n    });\r\n    return this.applyHeading;\r\n  }\r\n\r\n  executeHooks() {\r\n    this.router.navigate(['/fb-M/observable']);\r\n  }\r\n\r\n  getRedZoneList(data) {\r\n    this.covidDataService.CountryCounts(data);\r\n    this.RedZoneHeadingFirst = this.covidDataService.CountryCount();\r\n  }\r\n\r\n  opendialog() {\r\n    const dialogRef = this.dialog.open(CovidFormComponent);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  setlocal() {\r\n   localStorage.setItem('name', 'Vaibhav Bhandare');\r\n   localStorage.setItem('degree', 'Electronics Engineer');\r\n   //  console.log(localStorage.length); // it gives length of all keys from local\r\n  //  console.log(localStorage.key(1));  // getting key at index 1 i.e degree\r\n  }\r\n\r\n  getlocal() {\r\n    const item = localStorage.getItem('degree');\r\n    alert(item);\r\n  }\r\n\r\n  removeItemOfLocal() {\r\n    localStorage.removeItem('degree');\r\n    // if you want to clear all local storage then used clear method\r\n   // localStorage.clear();\r\n\r\n   // All same method used for session storage also\r\n  }\r\n\r\n  navigate() {\r\n    // navigation is possible by using below syntax also\r\n   this.router.navigate(['fb-M', 'observable']);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "worldcount.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "covidDataService",
                        "type": "CovidDataService"
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "covidDataService",
                        "type": "CovidDataService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <div class=\"row\">\r\n        <h1>Hello {{getCovidPatient()}}</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n            <!-- <b *ngFor=\"let item of patientSatatList; let i=index\">{{item}}{{i}}</b> <br>   -->\r\n            <!-- <ng-container *ngFor=\"let item of patientSatatList; let i=index\">\r\n                {{item}}{{i}}\r\n            </ng-container>   <br>  -->\r\n            <div>\r\n                <ul>\r\n                    <li *ngFor=\"let item of patientSatatList; let i=index\">\r\n                        {{i}} {{item}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"\">\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <div>\r\n                <button mat-raised-button color=\"primary\" (click)=\"navigate()\">D way of Navigation</button>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                    <h6>Display date here</h6>\r\n                    {{giveDate | date : 'shortDate'}}\r\n                    <!-- {{giveDate | date : 'h:mm a z'}} -->\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <h6>check activated child guard</h6>\r\n                    <button mat-raised-button color=\"primary\" [routerLink]=\"['/covid19m/mhreport']\">MHReport</button>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <h6>chekck ngModeloption</h6>\r\n                    <div>\r\n                        <form [formGroup]=\"rafelform\">\r\n                            <div>\r\n                                <!-- <label>last Name</label>\r\n                            <input type=\"text\" [(ngModel)]=\"lname\" [ngModelOptions]=\"{updateOn:'blur'}\">\r\n                            <h2>{{lname}}</h2> -->\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"\">Email</label>\r\n                                <input type=\"email\" name=\"\" id=\"\" formControlName=\"email\" required>\r\n                                <div *ngIf=\"rafelform.get('email').invalid && rafelform.get('email').errors\"\r\n                                    class=\"alert alert-danger\">\r\n                                    Please Enter Email\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- local storage and session storage -->\r\n            <div class=\"row\">\r\n                <mat-card>\r\n                    <mat-card-header>\r\n                        <mat-card-title>Storage</mat-card-title>\r\n                    </mat-card-header>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            local storage and session storage\r\n                        </p>\r\n                    </mat-card-content>\r\n                    <mat-card-actions>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"setlocal()\">Set Local Storage</button>\r\n                        <button mat-raised-button color=\"accent\" (click)=\"getlocal()\">Get Local Storage</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"removeItemOfLocal()\">Remove local key</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n                <div class=\"row\">\r\n                    <div>\r\n                        <h2>{{RedZoneHeadingFirst}}</h2>\r\n                        <input type=\"text\" [(ngModel)]='RedZoneHeading'>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"getRedZoneList(RedZoneHeading)\">Change\r\n                            Heading</button>\r\n                    </div>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"opendialog()\" class=\"form-control\">Open\r\n                        Dialog</button>\r\n                </div>\r\n                <div class=\"row\" style=\"margin-top: 20px;\">\r\n                    <figure class=\"galllery-item\">\r\n                        <img src=\"/assets/img/gallexies.jpg\" height=\"200px\" width=\"350px\">\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h1>Life Cycle Hook Execution Present in WorldCount Component</h1>\r\n            <div>\r\n                <button mat-raised-button color=\"primary\" (click)=\"executeHooks()\">Execute Life Cycle hooks</button>\r\n            </div>\r\n        </div>\r\n        <h2>Here is Material Mat -Spinner</h2>\r\n        <mat-spinner></mat-spinner>\r\n    </div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DataService"
                        },
                        {
                            "name": "UserService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AgGridTreeComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "InventoryComponent"
                        },
                        {
                            "name": "LitElementComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "ProUpdaterComponent"
                        },
                        {
                            "name": "ProductsComponent"
                        },
                        {
                            "name": "RoutingHeaderComponent"
                        },
                        {
                            "name": "SignUpFormComponent"
                        },
                        {
                            "name": "StartUpComponent"
                        },
                        {
                            "name": "StoryBookComponent"
                        },
                        {
                            "name": "SubmitUserComponent"
                        },
                        {
                            "name": "UserdetailsComponent"
                        },
                        {
                            "name": "UsersComponent"
                        },
                        {
                            "name": "WelcomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Covid19MModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CanactivatechildComponent"
                        },
                        {
                            "name": "CovidFormComponent"
                        },
                        {
                            "name": "MaharashtraReportComponent"
                        },
                        {
                            "name": "WorldCountComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "Covid19MRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Covid19MRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FBMModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "FbserviceService"
                        },
                        {
                            "name": "ObservableService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CamelCaseComponent"
                        },
                        {
                            "name": "FriendsComponent"
                        },
                        {
                            "name": "MyDialogComponentComponent"
                        },
                        {
                            "name": "ObservableComponent"
                        },
                        {
                            "name": "ObservablechildComponent"
                        },
                        {
                            "name": "PepoleComponent"
                        },
                        {
                            "name": "ReactiveFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FBMRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FBMRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SkillMModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "SkillServiceService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SkillListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SkillMRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SkillMRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Material",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/material/material.module.ts",
                "type": "[]",
                "defaultValue": "[\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatGridListModule,\r\n  MatExpansionModule,\r\n  MatTabsModule,\r\n  MatCardModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatTooltipModule,\r\n  MatSnackBarModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatSlideToggleModule\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/material/material.module.ts": [
                {
                    "name": "Material",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/material/material.module.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatGridListModule,\r\n  MatExpansionModule,\r\n  MatTabsModule,\r\n  MatCardModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatTooltipModule,\r\n  MatSnackBarModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatSlideToggleModule\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "signform",
                        "component": "SignUpFormComponent"
                    },
                    {
                        "path": "user",
                        "component": "UsersComponent"
                    },
                    {
                        "path": "userdetails/:id",
                        "component": "UserdetailsComponent",
                        "canActivate": [
                            "CanactiveGuard"
                        ]
                    },
                    {
                        "path": "Skill-M",
                        "loadChildren": "./skill-m/skill-m.module#SkillMModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/skill-m/skill-m-routing.module.ts",
                                        "module": "SkillMRoutingModule",
                                        "children": [
                                            {
                                                "path": "skill-list",
                                                "component": "SkillListComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SkillMModule"
                            }
                        ]
                    },
                    {
                        "path": "fb-M",
                        "loadChildren": "./fbm/fbm.module#FBMModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/fbm/fbm-routing.module.ts",
                                        "module": "FBMRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "PepoleComponent"
                                            },
                                            {
                                                "path": "observable",
                                                "component": "ObservableComponent",
                                                "canDeactivate": [
                                                    "CanactiveGuard"
                                                ]
                                            },
                                            {
                                                "path": "reactive-form",
                                                "component": "ReactiveFormComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "FBMModule"
                            }
                        ]
                    },
                    {
                        "path": "StartUp",
                        "component": "StartUpComponent"
                    },
                    {
                        "path": "ag-grid-tree",
                        "component": "AgGridTreeComponent"
                    },
                    {
                        "path": "covid19m",
                        "loadChildren": "./covid19-m/covid19-m.module#Covid19MModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/covid19-m/covid19-m-routing.module.ts",
                                        "module": "Covid19MRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "WorldCountComponent"
                                            },
                                            {
                                                "path": "mhreport",
                                                "component": "MaharashtraReportComponent",
                                                "canActivateChild": [
                                                    "CanactiveGuard"
                                                ],
                                                "children": [
                                                    {
                                                        "path": "covinax",
                                                        "component": "CanactivatechildComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "Covid19MModule"
                            }
                        ]
                    },
                    {
                        "path": "lit-Elements",
                        "component": "LitElementComponent"
                    },
                    {
                        "path": "story-book",
                        "component": "StoryBookComponent"
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/DirectiveL/login.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "LoginDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/Guard/canactive.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "CanactiveGuard",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/ag-grid-tree/ag-grid-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/covid19-m/canactivatechild/canactivatechild.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CanactivatechildComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/covid19-m/covid-form/covid-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CovidFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/covid19-m/maharashtra-report/maharashtra-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MaharashtraReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/covid19-m/services/coviddata.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CovidDataService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/covid19-m/worldCount/worldcount.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorldCountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/fb.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CamelCaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/fbservice.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FbserviceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/friends/friends.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FriendsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/my-dialog-component/my-dialog-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyDialogComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/observable/observable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ObservableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/observable/observable.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ObservableService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/observablechild/observablechild.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ObservablechildComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/pepole/pepole.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PepoleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/reactive-form/reactive-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/fbm/subject.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SubjectService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/header.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HeaderAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/inventory/inventory.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InventoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/lit-element-component/elements/lit-element-two.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElementTwo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lit-element-component/elements/lit-element.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HelloElement",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lit-element-component/lit-element.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LitElementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/login/common/submituser.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubmitUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/material/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Material",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/model/geography.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Geography",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/products/Product.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/products/pro-updater/pro-updater.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProUpdaterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/routing-header/routing-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoutingHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/bb.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BbService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/startupm.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StartupmService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/startupm.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColumnDefination",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/Person.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Person",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/signupform.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/skill-m/skill-list/skill-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkillListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/skill-m/skill-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SkillServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/startup-metrics-component/StartUpComponent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StartUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/story-book/story-book.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoryBookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/userdetails/userdetails.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserdetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/users/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/users/users.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UsersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/users/users.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/welcome/welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}